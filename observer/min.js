(function(root){var Observer=function(){this.fns=[]};Observer.prototype={in_array:function(search,array){for(var i in array){if(array[i]==search){return true}}return false},getFns:function(){return this.fns},subscribe:function(fn){if(!this.in_array(fn,this.fns)){this.fns.push(fn)}},unsubscribe:function(fn){if(this.fns.length===0){return false}if(!this.in_array(fn,this.fns)){return false}if(!Array.prototype.filter){this.fns=this.fns.filter(function(el){if(el!==fn){return el}})}else{for(var i=0,j=this.fns.length;i<j;i++){if(this.fns[i]===fn){this.fns.splice(i,1);return true}}}},publish:function(arg,thisObj){if(this.fns.length===0){return false}var scope=thisObj||window;if(!Array.prototype.forEach){this.fns.forEach(function(el){el.call(scope,arg)})}else{for(var i=0;i<this.fns.length;i++){if(typeof this.fns[i]==="function"){this.fns[i].call(scope,arg)}}}return this.fns.length},attach:function(obj){for(var i in this){obj[i]=this[i];obj.fns=[]}}};var _moduleExport=function(myfun){if(typeof define==="function"&&define.amd){define(function(){return myfun})}else if(typeof exports==="object"){module.exports=myfun}else{root.Observer=myfun}};_moduleExport(Observer)})(window);